{"ast":null,"code":"var _jsxFileName = \"/Users/aigul/Desktop/arvb/snowshop/src/components/Hero/Admin/AddItems/AddItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { contextItem } from \"../../../../contexts/ContextItem\";\nimport { Button, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport BasicLayout from './Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  form: {\n    width: '100%',\n    maxWidth: 700,\n    padding: 30,\n    border: '2px solid #3f51b5',\n    borderRadius: 15,\n    margin: '0 auto'\n  },\n  input: {\n    marginBottom: 30\n  }\n});\nexport default function AddItems() {\n  _s();\n\n  const [inpName, setInpName] = useState('');\n  const [inpDesc, setInpDesc] = useState('');\n  const [inpPrice, setInpPrice] = useState('');\n  const [inpBrand, setInpBrand] = useState('');\n  const [inpType, setInpType] = useState('');\n  const [inpImg, setInpImg] = useState('');\n  const {\n    addItems\n  } = useContext(contextItem);\n\n  function handleClick() {\n    let newObj = {\n      name: inpName,\n      description: inpDesc,\n      price: inpPrice,\n      brand: inpBrand,\n      type: inpType,\n      image: inpImg\n    };\n    addItems(newObj);\n    setInpName('');\n    setInpDesc('');\n    setInpPrice('');\n    setInpImg('');\n  }\n\n  const classes = useStyles();\n  const intialValues = {\n    title: \"\",\n    image: \"\",\n    brand: \"\",\n    price: 0,\n    description: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Required field!').max(255, 'Too Long title!'),\n    image: Yup.string().required('Required field!'),\n    brand: Yup.string().required('Required field!'),\n    price: Yup.string().required('Required field!'),\n    description: Yup.string().required('Required field!')\n  });\n\n  const onSubmit = (values, {\n    resetForm\n  }) => {\n    addItems({ ...values,\n      images: [values.image]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BasicLayout, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: intialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: ({}) => /*#__PURE__*/_jsxDEV(Form, {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            textAlign: 'center',\n            marginBottom: 15\n          },\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"title\",\n          fullWidth: true,\n          label: \"Title\",\n          variant: \"outlined\",\n          className: classes.input,\n          value: inpName,\n          onChange: e => setInpName(e.target.value),\n          as: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"brand\",\n          fullWidth: true,\n          label: \"Brand\",\n          variant: \"outlined\",\n          className: classes.input,\n          value: inpBrand,\n          onChange: e => setInpBrand(e.target.value),\n          as: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"price\",\n          fullWidth: true,\n          label: \"Price\",\n          variant: \"outlined\",\n          className: classes.input,\n          value: inpPrice,\n          onChange: e => setInpPrice(e.target.value),\n          as: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"description\",\n          fullWidth: true,\n          label: \"Description\",\n          variant: \"outlined\",\n          as: TextField,\n          className: classes.input,\n          value: inpDesc,\n          onChange: e => setInpDesc(e.target.value),\n          multiline: true,\n          rows: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"image\",\n          fullWidth: true,\n          label: \"Image\",\n          className: classes.input,\n          value: inpImg,\n          onChange: e => setInpImg(e.target.value),\n          variant: \"outlined\",\n          as: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClick,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddItems, \"fDwMayo0NkvHwXlfJJTdumKr+Nc=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItems\");","map":{"version":3,"sources":["/Users/aigul/Desktop/arvb/snowshop/src/components/Hero/Admin/AddItems/AddItems.js"],"names":["React","useContext","useState","contextItem","Button","makeStyles","TextField","Typography","Field","Form","Formik","Yup","BasicLayout","useStyles","form","width","maxWidth","padding","border","borderRadius","margin","input","marginBottom","AddItems","inpName","setInpName","inpDesc","setInpDesc","inpPrice","setInpPrice","inpBrand","setInpBrand","inpType","setInpType","inpImg","setInpImg","addItems","handleClick","newObj","name","description","price","brand","type","image","classes","intialValues","title","validationSchema","object","shape","string","required","max","onSubmit","values","resetForm","images","textAlign","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport {contextItem} from \"../../../../contexts/ContextItem\";\nimport { Button, makeStyles, TextField, Typography } from '@material-ui/core';\nimport {Field,Form, Formik} from 'formik';\nimport * as Yup from 'yup'\nimport BasicLayout from './Layout';\n\n\nconst useStyles = makeStyles({\n    form: {\n        width: '100%',\n        maxWidth: 700,\n        padding: 30,\n        border: '2px solid #3f51b5',\n        borderRadius: 15,\n        margin: '0 auto'\n    },\n    input: {\n        marginBottom: 30\n    }\n})\n\n\nexport default function AddItems() {\n\n    const [inpName,setInpName] = useState('');\n    const [inpDesc,setInpDesc] = useState('');\n    const [inpPrice,setInpPrice] = useState('');\n    const [inpBrand,setInpBrand] = useState('');\n    const [inpType,setInpType] = useState('');\n    const [inpImg,setInpImg] = useState('');\n\n    const {addItems} = useContext(contextItem)\n\n\n    function handleClick(){\n        let newObj ={\n            name : inpName,\n            description: inpDesc,\n            price: inpPrice,\n            brand : inpBrand,\n            type: inpType,\n            image: inpImg\n        }\n        addItems(newObj)\n        setInpName('')\n        setInpDesc('')\n        setInpPrice('')\n        setInpImg('')\n    }\n\n    const classes = useStyles();\n\n    const intialValues = {\n        title: \"\",\n        image: \"\",\n        brand: \"\",\n        price: 0,\n        description: \"\"\n    }\n\n    const validationSchema = Yup.object().shape({\n        title: Yup.string().required('Required field!').max(255, 'Too Long title!'),\n        image: Yup.string().required('Required field!'),\n        brand: Yup.string().required('Required field!'),\n        price: Yup.string().required('Required field!'),\n        description: Yup.string().required('Required field!'),\n    })\n\n    const onSubmit = (values, { resetForm }) => {\n        addItems({\n            ...values,\n            images: [values.image]\n        })\n    }\n\n\n\n    return (\n\n        <BasicLayout>\n            <Formik\n                initialValues={intialValues}\n                validationSchema={validationSchema}\n                onSubmit={onSubmit}\n            >\n\n                {({\n\n                  }) => (\n                    <Form className={classes.form}>\n\n                        <Typography variant=\"h6\" style={{ textAlign: 'center', marginBottom: 15 }}>\n                            Add Product\n                        </Typography>\n\n                        <Field\n                            name=\"title\"\n                            fullWidth\n                            label=\"Title\"\n                            variant=\"outlined\"\n                            className={classes.input}\n                            value={inpName}\n                            onChange = {(e)=>setInpName(e.target.value)}\n                            as={TextField}\n                        />\n                        <Field\n                            name=\"brand\"\n                            fullWidth\n                            label=\"Brand\"\n                            variant=\"outlined\"\n                            className={classes.input}\n                            value={inpBrand} onChange = {(e)=>setInpBrand(e.target.value)}\n                            as={TextField}\n                        />\n                        <Field\n                            name=\"price\"\n                            fullWidth\n                            label=\"Price\"\n                            variant=\"outlined\"\n                            className={classes.input}\n                            value={inpPrice} onChange = {(e)=>setInpPrice(e.target.value)}\n                            as={TextField}\n                        />\n\n                        <Field\n                            name=\"description\"\n                            fullWidth\n                            label=\"Description\"\n                            variant=\"outlined\"\n                            as={TextField}\n                            className={classes.input}\n                            value={inpDesc}\n                            onChange = {(e)=>setInpDesc(e.target.value)}\n                            multiline\n                            rows={10}\n                        />\n\n                        <Field\n                            name=\"image\"\n                            fullWidth\n                            label=\"Image\"\n                            className={classes.input}\n                            value={inpImg} onChange = {(e)=>setInpImg(e.target.value)}\n                            variant=\"outlined\"\n                            as={TextField}\n                        />\n\n                        <Button onClick ={handleClick} type=\"submit\" color=\"primary\" variant=\"contained\">\n                            Save\n                        </Button>\n\n                    </Form>\n                )}\n\n\n            </Formik>\n        </BasicLayout>\n    )\n}"]},"metadata":{},"sourceType":"module"}