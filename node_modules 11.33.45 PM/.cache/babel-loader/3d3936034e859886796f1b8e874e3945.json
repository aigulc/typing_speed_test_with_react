{"ast":null,"code":"var _jsxFileName = \"/Users/vadimchaikin/WebstormProjects/snowshop/src/containers/Auth/Register/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField } from '@material-ui/core';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useContext, useState } from 'react';\nimport { authContext } from '../../../contexts/AuthContext';\nimport classes from './Register.module.css';\nimport * as Yup from \"yup\";\nimport TextError from '../../../components/Pagination/TextError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterForm() {\n  _s();\n\n  const {\n    registerUser\n  } = useContext(authContext);\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().required(\"Обязательное поле!\").email('Неверный формат email!'),\n    password: Yup.string().required(\"Обязательное поле!\").min(6, 'Требуется как минимум 6 символов!'),\n    passwordConfirm: Yup.string().required(\"Обязательное поле!\").oneOf([Yup.ref('password'), null], 'Пароли должны совпадать!')\n  });\n\n  const onSubmit = (values, actions) => {\n    const {\n      email,\n      password\n    } = values;\n    registerUser(email, password);\n    actions.resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: () => /*#__PURE__*/_jsxDEV(Form, {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            name: \"email\",\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Email\",\n            as: TextField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: TextError,\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\",\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Password\",\n            as: TextField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: TextError,\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"passwordConfirm\",\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Password confirm\",\n            as: TextField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: TextError,\n            name: \"passwordConfirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterForm, \"7nP6VNWFEjF30o2bacwzmsRMlHk=\");\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/vadimchaikin/WebstormProjects/snowshop/src/containers/Auth/Register/RegisterForm.js"],"names":["Button","TextField","ErrorMessage","Field","Form","Formik","React","useContext","useState","authContext","classes","Yup","TextError","RegisterForm","registerUser","initialValues","email","password","passwordConfirm","validationSchema","object","string","required","min","oneOf","ref","onSubmit","values","actions","resetForm","form","marginBottom"],"mappings":"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","sourcesContent":["import { Button, TextField } from '@material-ui/core';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useContext, useState } from 'react';\nimport { authContext } from '../../../contexts/AuthContext';\nimport classes from './Register.module.css';\nimport * as Yup from \"yup\";\nimport TextError from '../../../components/Pagination/TextError';\n\nexport default function RegisterForm() {\n\n    const { registerUser } = useContext(authContext);\n\n    const initialValues = {\n        email: \"\",\n        password: \"\",\n        passwordConfirm: \"\"\n    }\n\n    const validationSchema = Yup.object({\n        email: Yup.string().required(\"Обязательное поле!\").email('Неверный формат email!'),\n        password: Yup.string().required(\"Обязательное поле!\").min(6, 'Требуется как минимум 6 символов!'),\n        passwordConfirm: Yup.string().required(\"Обязательное поле!\").oneOf([Yup.ref('password'), null], 'Пароли должны совпадать!')\n    });\n\n    const onSubmit = (values, actions) => {\n        const { email, password } = values;\n        registerUser(email, password);\n        actions.resetForm();\n    }\n\n    return (\n        <div>\n\n            <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={onSubmit}\n            >\n                {() => (\n                    <Form className={classes.form}>\n\n                        <h1>\n                            Register\n                        </h1>\n\n                        <div style={{marginBottom: 30}}>\n                            <Field\n                                type=\"email\"\n                                name=\"email\"\n                                fullWidth={true}\n                                variant=\"outlined\"\n                                placeholder=\"Email\"\n                                as={TextField}\n                            />\n\n                            <ErrorMessage component={TextError} name=\"email\" />\n                        </div>\n\n                        <div\n                            style={{marginBottom: 30}}\n                        >\n                            <Field\n                                type=\"password\"\n                                name=\"password\"\n                                fullWidth={true}\n                                variant=\"outlined\"\n                                placeholder=\"Password\"\n                                as={TextField}\n                            />\n\n                            <ErrorMessage component={TextError} name=\"password\" />\n\n                        </div>\n\n                        <div\n                            style={{marginBottom: 30}}\n                        >\n                            <Field\n                                type=\"password\"\n                                name=\"passwordConfirm\"\n                                fullWidth={true}\n                                variant=\"outlined\"\n                                placeholder=\"Password confirm\"\n                                as={TextField}\n                            />\n                            <ErrorMessage component={TextError} name=\"passwordConfirm\" />\n\n                        </div>\n\n                        <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n                            Register\n                        </Button>\n\n                    </Form>\n                )}\n            </Formik>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}