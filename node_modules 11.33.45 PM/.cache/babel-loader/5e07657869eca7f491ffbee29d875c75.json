{"ast":null,"code":"var _jsxFileName = \"/Users/aigul/Desktop/arvb/snowshop/src/components/Hero/Admin/EditItem/EditItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { contextItem } from \"../../../../contexts/ContextItem\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport BasicLayout from '../AddItems/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  form: {\n    width: '100%',\n    maxWidth: 700,\n    padding: 30,\n    border: '2px solid #3f51b5',\n    borderRadius: 15,\n    margin: '0 auto'\n  },\n  input: {\n    marginBottom: 30\n  }\n});\nexport default function EditItems() {\n  _s();\n\n  const {\n    itemToEdit,\n    saveEdit,\n    edited\n  } = useContext(contextItem);\n  const [newEdit, setNewEdit] = useState(edited);\n  useEffect(() => {\n    setNewEdit(edited);\n  }, [edited]);\n  let history = useHistory();\n\n  function handleEditInput(e) {\n    let newItems = { ...edited,\n      [e.target.name]: e.target.value\n    };\n    setNewEdit(newItems);\n  }\n\n  const classes = useStyles();\n  const intialValues = {\n    title: \"\",\n    image: \"\",\n    brand: \"\",\n    price: 0,\n    description: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Required field!').max(255, 'Too Long title!'),\n    image: Yup.string().required('Required field!'),\n    brand: Yup.string().required('Required field!'),\n    price: Yup.string().required('Required field!'),\n    description: Yup.string().required('Required field!')\n  });\n\n  const onSubmit = (values, {\n    resetForm\n  }) => {\n    saveEdit({ ...values,\n      images: [values.image]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: newEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(BasicLayout, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: intialValues,\n          validationSchema: validationSchema,\n          onSubmit: onSubmit,\n          children: ({}) => /*#__PURE__*/_jsxDEV(Form, {\n            className: classes.form,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              style: {\n                textAlign: 'center',\n                marginBottom: 15\n              },\n              children: \"Add Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"title\",\n              fullWidth: true,\n              label: \"Title\",\n              variant: \"outlined\",\n              className: classes.input,\n              value: newEdit.name,\n              name: 'name',\n              onChange: handleEditInput,\n              as: TextField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"brand\",\n              fullWidth: true,\n              label: \"Brand\",\n              variant: \"outlined\",\n              className: classes.input,\n              value: newEdit.brand,\n              name: 'brand',\n              onChange: handleEditInput,\n              as: TextField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"price\",\n              fullWidth: true,\n              label: \"Price\",\n              variant: \"outlined\",\n              className: classes.input,\n              value: newEdit.price,\n              name: 'price',\n              onChange: handleEditInput,\n              as: TextField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"description\",\n              fullWidth: true,\n              label: \"Description\",\n              variant: \"outlined\",\n              as: TextField,\n              className: classes.input,\n              value: newEdit.description,\n              name: 'description',\n              onChange: handleEditInput,\n              multiline: true,\n              rows: 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"image\",\n              fullWidth: true,\n              label: \"Image\",\n              className: classes.input,\n              value: newEdit.image,\n              name: 'image',\n              onChange: handleEditInput,\n              variant: \"outlined\",\n              as: TextField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => saveEdit(newEdit),\n                type: \"submit\",\n                color: \"primary\",\n                variant: \"contained\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditItems, \"RNgvjEsynZJIg6oLMnxjLa/0K1s=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = EditItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditItems\");","map":{"version":3,"sources":["/Users/aigul/Desktop/arvb/snowshop/src/components/Hero/Admin/EditItem/EditItems.js"],"names":["React","useContext","useEffect","useState","contextItem","Link","useHistory","Button","makeStyles","TextField","Typography","Field","Form","Formik","Yup","BasicLayout","useStyles","form","width","maxWidth","padding","border","borderRadius","margin","input","marginBottom","EditItems","itemToEdit","saveEdit","edited","newEdit","setNewEdit","history","handleEditInput","e","newItems","target","name","value","classes","intialValues","title","image","brand","price","description","validationSchema","object","shape","string","required","max","onSubmit","values","resetForm","images","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport {contextItem} from \"../../../../contexts/ContextItem\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button, makeStyles, TextField, Typography } from '@material-ui/core';\nimport {Field,Form, Formik} from 'formik';\nimport * as Yup from 'yup'\nimport BasicLayout from '../AddItems/Layout';\n\n\nconst useStyles = makeStyles({\n    form: {\n        width: '100%',\n        maxWidth: 700,\n        padding: 30,\n        border: '2px solid #3f51b5',\n        borderRadius: 15,\n        margin: '0 auto'\n    },\n    input: {\n        marginBottom: 30\n    }\n})\n\n\nexport default function EditItems() {\n\n    const { itemToEdit, saveEdit, edited } = useContext(contextItem)\n    const [newEdit, setNewEdit] = useState(edited)\n\n    useEffect(() => {\n        setNewEdit(edited)\n    }, [edited])\n\n    let history = useHistory()\n\n    function handleEditInput(e) {\n        let newItems = {\n            ...edited,\n            [e.target.name]: e.target.value\n        }\n        setNewEdit(newItems)\n    }\n\n    const classes = useStyles();\n\n    const intialValues = {\n        title: \"\",\n        image: \"\",\n        brand: \"\",\n        price: 0,\n        description: \"\"\n    }\n\n    const validationSchema = Yup.object().shape({\n        title: Yup.string().required('Required field!').max(255, 'Too Long title!'),\n        image: Yup.string().required('Required field!'),\n        brand: Yup.string().required('Required field!'),\n        price: Yup.string().required('Required field!'),\n        description: Yup.string().required('Required field!'),\n    })\n\n    const onSubmit = (values, { resetForm }) => {\n        saveEdit({\n            ...values,\n            images: [values.image]\n        })\n    }\n\n\n\n    return (\n        <div>\n            {newEdit ?\n                <>\n                    <BasicLayout>\n                        <Formik\n                            initialValues={intialValues}\n                            validationSchema={validationSchema}\n                            onSubmit={onSubmit}\n                        >\n\n                            {({\n\n                              }) => (\n                                <Form className={classes.form}>\n\n                                    <Typography variant=\"h6\" style={{ textAlign: 'center', marginBottom: 15 }}>\n                                        Add Product\n                                    </Typography>\n\n                                    <Field\n                                        name=\"title\"\n                                        fullWidth\n                                        label=\"Title\"\n                                        variant=\"outlined\"\n                                        className={classes.input}\n                                        value={newEdit.name} name={'name'} onChange={handleEditInput}\n                                        as={TextField}\n                                    />\n                                    <Field\n                                        name=\"brand\"\n                                        fullWidth\n                                        label=\"Brand\"\n                                        variant=\"outlined\"\n                                        className={classes.input}\n                                        value={newEdit.brand} name={'brand'} onChange={handleEditInput}\n                                        as={TextField}\n                                    />\n                                    <Field\n                                        name=\"price\"\n                                        fullWidth\n                                        label=\"Price\"\n                                        variant=\"outlined\"\n                                        className={classes.input}\n                                        value={newEdit.price} name={'price'} onChange={handleEditInput}\n                                        as={TextField}\n                                    />\n\n                                    <Field\n                                        name=\"description\"\n                                        fullWidth\n                                        label=\"Description\"\n                                        variant=\"outlined\"\n                                        as={TextField}\n                                        className={classes.input}\n                                        value={newEdit.description} name={'description'} onChange={handleEditInput}\n                                        multiline\n                                        rows={10}\n                                    />\n\n                                    <Field\n                                        name=\"image\"\n                                        fullWidth\n                                        label=\"Image\"\n                                        className={classes.input}\n                                        value={newEdit.image} name ={'image'} onChange = {handleEditInput}\n                                        variant=\"outlined\"\n                                        as={TextField}\n                                    />\n                                    <Link to ='/'>\n                                        <Button onClick ={()=>saveEdit(newEdit)} type=\"submit\" color=\"primary\" variant=\"contained\">\n                                            Save\n                                        </Button>\n                                    </Link>\n                                </Form>\n                            )}\n                        </Formik>\n                    </BasicLayout>\n                </>\n                : <h1>Loading</h1>}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}