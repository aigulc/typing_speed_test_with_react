{"ast":null,"code":"var _jsxFileName = \"/Users/vadimchaikin/WebstormProjects/snowshop/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { API } from '../helpers/constants';\nimport { getToken, setTokens } from '../jwt/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authContext = /*#__PURE__*/React.createContext(null);\nconst INIT_STATE = {\n  currentUser: null\n};\n\nconst reducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    // case \"REGISTER_USER\":\n    //     return {\n    //         ...state,\n    //         currentUser: action.payload\n    //     }\n    case \"LOGIN_USER\":\n      return { ...state,\n        currentUser: action.payload\n      };\n\n    case \"LOGOUT_USER\":\n      return { ...state,\n        currentUser: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst AuthContextProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n  const registerUser = async (email, password) => {\n    try {\n      const {\n        data\n      } = await axios.post(`${API}/account/register/`, {\n        email,\n        password,\n        password_confirm: password\n      });\n    } catch (error) {}\n  };\n\n  const loginUser = async (email, password) => {\n    try {\n      const {\n        data\n      } = await axios.post(`${API}/account/login/`, {\n        email,\n        password\n      });\n      setTokens(data);\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      user: state.currentUser,\n      registerUser,\n      loginUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"4m7vccIZ8Keq6ndhHxt+SMfGKKc=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/vadimchaikin/WebstormProjects/snowshop/src/contexts/AuthContext.js"],"names":["React","useReducer","axios","API","getToken","setTokens","authContext","createContext","INIT_STATE","currentUser","reducer","state","action","type","payload","AuthContextProvider","props","dispatch","registerUser","email","password","data","post","password_confirm","error","loginUser","Error","user","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,sBAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,gBAApC;;AAEA,OAAO,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,CAAoB,IAApB,CAApB;AAEP,MAAMC,UAAU,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACH,UAAP,EAAmBI,MAAnB,KAA8B;AAC1C,UAAOA,MAAM,CAACC,IAAd;AACI;AACA;AACA;AACA;AACA;AACA,SAAK,YAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFjB,OAAP;;AAIJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AAAS,aAAOE,KAAP;AAhBb;AAkBH,CAnBD;;AAqBA,MAAMI,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAEnC,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBhB,UAAU,CAACS,OAAD,EAAUF,UAAV,CAApC;;AAEA,QAAMU,YAAY,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC5C,QAAI;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMnB,KAAK,CAACoB,IAAN,CAAY,GAAEnB,GAAI,oBAAlB,EAAuC;AAC1DgB,QAAAA,KAD0D;AAE1DC,QAAAA,QAF0D;AAG1DG,QAAAA,gBAAgB,EAAEH;AAHwC,OAAvC,CAAvB;AAKH,KAND,CAME,OAAOI,KAAP,EAAc,CAEf;AACJ,GAVD;;AAYA,QAAMC,SAAS,GAAG,OAAON,KAAP,EAAcC,QAAd,KAA2B;AACzC,QAAI;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMnB,KAAK,CAACoB,IAAN,CAAY,GAAEnB,GAAI,iBAAlB,EAAoC;AACvDgB,QAAAA,KADuD;AAEvDC,QAAAA;AAFuD,OAApC,CAAvB;AAIAf,MAAAA,SAAS,CAACgB,IAAD,CAAT;AACH,KAND,CAME,OAAOG,KAAP,EAAc;AACZ,YAAM,IAAIE,KAAJ,CAAUF,KAAV,CAAN;AACH;AACJ,GAVD;;AAYA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBG,MAAAA,IAAI,EAAEhB,KAAK,CAACF,WADa;AAEzBS,MAAAA,YAFyB;AAGzBO,MAAAA;AAHyB,KAA7B;AAAA,cAKKT,KAAK,CAACY;AALX;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CArCD;;GAAMb,mB;;KAAAA,mB;AAuCN,eAAeA,mBAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { API } from '../helpers/constants';\nimport { getToken, setTokens } from '../jwt/helpers';\n\nexport const authContext = React.createContext(null);\n\nconst INIT_STATE = {\n    currentUser: null\n}\n\nconst reducer = (state=INIT_STATE, action) => {\n    switch(action.type){\n        // case \"REGISTER_USER\":\n        //     return {\n        //         ...state,\n        //         currentUser: action.payload\n        //     }\n        case \"LOGIN_USER\":\n            return {\n                ...state,\n                currentUser: action.payload\n            }\n        case \"LOGOUT_USER\":\n            return {\n                ...state,\n                currentUser: null\n            }\n        default: return state\n    }\n}\n\nconst AuthContextProvider = (props) => {\n\n    const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n    const registerUser = async (email, password) => {\n        try {\n            const { data } = await axios.post(`${API}/account/register/`, {\n                email,\n                password,\n                password_confirm: password\n            })\n        } catch (error) {\n\n        }\n    }\n\n    const loginUser = async (email, password) => {\n        try {\n            const { data } = await axios.post(`${API}/account/login/`, {\n                email,\n                password,\n            });\n            setTokens(data);\n        } catch (error) {\n            throw new Error(error);\n        }\n    }\n\n    return (\n        <authContext.Provider value={{\n            user: state.currentUser,\n            registerUser,\n            loginUser\n        }}>\n            {props.children}\n        </authContext.Provider>\n    )\n}\n\nexport default AuthContextProvider;"]},"metadata":{},"sourceType":"module"}