{"ast":null,"code":"var _jsxFileName = \"/Users/aigul/Desktop/makers/typing_speed_test/src/Preview.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Preview(props) {\n  const text = /*#__PURE__*/_jsxDEV(\"props\", {\n    className: \"text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 18\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border rounded p-3 md-4\",\n    children: text.map((symbol, index) => {\n      let color;\n\n      if (index < props.userInp.length) {\n        color = symbol === props.userInp[index] ? 'green' : 'red';\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: color\n        },\n        children: [\" \", symbol]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/Users/aigul/Desktop/makers/typing_speed_test/src/Preview.jsx"],"names":["React","Preview","props","text","map","symbol","index","color","userInp","length","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEnC,QAAMC,IAAI,gBAAG;AAAO,IAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAb;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,yBAAjB;AAAA,cAEQA,IAAI,CAACC,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,KAAmB;AACxB,UAAIC,KAAJ;;AACA,UAAGD,KAAK,GAAGJ,KAAK,CAACM,OAAN,CAAcC,MAAzB,EAAiC;AAC7BF,QAAAA,KAAK,GAAGF,MAAM,KAAKH,KAAK,CAACM,OAAN,CAAcF,KAAd,CAAX,GAAkC,OAAlC,GAA4C,KAApD;AACH;;AACD,0BAAO;AAAoB,QAAA,KAAK,EAAI;AAACI,UAAAA,eAAe,EAAEH;AAAlB,SAA7B;AAAA,wBAA0DF,MAA1D;AAAA,SAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAND;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;KAjBuBL,O","sourcesContent":["import React from 'react'\n\nexport default function Preview(props) {\n\n    const text = <props className=\"text\"></props>;\n\n    return (\n        <div className = \"border rounded p-3 md-4\">\n            {\n                text.map((symbol, index) => {\n                    let color;\n                    if(index < props.userInp.length) {\n                        color = symbol === props.userInp[index] ? 'green' : 'red'\n                    }\n                    return <span key = {index} style = {{backgroundColor: color}} > {symbol}</span>\n                })\n            }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}